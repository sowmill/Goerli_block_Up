{"abi": [{"inputs": [], "stateMutability": "nonpayable", "type": "constructor", "name": "constructor"}, {"inputs": [], "name": "Candidate_count", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "name": "Candidates", "outputs": [{"internalType": "uint256", "name": "id", "type": "uint256"}, {"internalType": "string", "name": "name", "type": "string"}, {"internalType": "string", "name": "party", "type": "string"}, {"internalType": "uint256", "name": "vote_count", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "uint256", "name": "_candidateId", "type": "uint256"}], "name": "Vote", "outputs": [], "stateMutability": "nonpayable", "type": "function"}, {"inputs": [], "name": "viewvoters", "outputs": [{"internalType": "uint256", "name": "", "type": "uint256"}], "stateMutability": "view", "type": "function"}, {"inputs": [{"internalType": "address", "name": "", "type": "address"}], "name": "voters", "outputs": [{"internalType": "bool", "name": "", "type": "bool"}], "stateMutability": "view", "type": "function"}], "allSourcePaths": {"0": "contracts/Election.sol"}, "ast": {"absolutePath": "contracts/Election.sol", "exportedSymbols": {"Election": [123]}, "id": 124, "license": "MIT", "nodeType": "SourceUnit", "nodes": [{"id": 1, "literals": ["solidity", "^", "0.8", ".0"], "nodeType": "PragmaDirective", "src": "32:23:0"}, {"abstract": false, "baseContracts": [], "canonicalName": "Election", "contractDependencies": [], "contractKind": "contract", "fullyImplemented": true, "id": 123, "linearizedBaseContracts": [123], "name": "Election", "nameLocation": "65:8:0", "nodeType": "ContractDefinition", "nodes": [{"canonicalName": "Election.Candidate", "id": 10, "members": [{"constant": false, "id": 3, "mutability": "mutable", "name": "id", "nameLocation": "135:2:0", "nodeType": "VariableDeclaration", "scope": 10, "src": "127:10:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 2, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "127:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}, {"constant": false, "id": 5, "mutability": "mutable", "name": "name", "nameLocation": "152:4:0", "nodeType": "VariableDeclaration", "scope": 10, "src": "145:11:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 4, "name": "string", "nodeType": "ElementaryTypeName", "src": "145:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 7, "mutability": "mutable", "name": "party", "nameLocation": "171:5:0", "nodeType": "VariableDeclaration", "scope": 10, "src": "164:12:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}, "typeName": {"id": 6, "name": "string", "nodeType": "ElementaryTypeName", "src": "164:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 9, "mutability": "mutable", "name": "vote_count", "nameLocation": "192:10:0", "nodeType": "VariableDeclaration", "scope": 10, "src": "184:18:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 8, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "184:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "name": "Candidate", "nameLocation": "110:9:0", "nodeType": "StructDefinition", "scope": 123, "src": "103:104:0", "visibility": "public"}, {"constant": false, "functionSelector": "a3ec138d", "id": 14, "mutability": "mutable", "name": "voters", "nameLocation": "257:6:0", "nodeType": "VariableDeclaration", "scope": 123, "src": "227:36:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "typeName": {"id": 13, "keyType": {"id": 11, "name": "address", "nodeType": "ElementaryTypeName", "src": "235:7:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "nodeType": "Mapping", "src": "227:22:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}, "valueType": {"id": 12, "name": "bool", "nodeType": "ElementaryTypeName", "src": "244:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "290e9212", "id": 19, "mutability": "mutable", "name": "Candidates", "nameLocation": "323:10:0", "nodeType": "VariableDeclaration", "scope": 123, "src": "288:45:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$10_storage_$", "typeString": "mapping(uint256 => struct Election.Candidate)"}, "typeName": {"id": 18, "keyType": {"id": 15, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "296:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "Mapping", "src": "288:27:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$10_storage_$", "typeString": "mapping(uint256 => struct Election.Candidate)"}, "valueType": {"id": 17, "nodeType": "UserDefinedTypeName", "pathNode": {"id": 16, "name": "Candidate", "nodeType": "IdentifierPath", "referencedDeclaration": 10, "src": "305:9:0"}, "referencedDeclaration": 10, "src": "305:9:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$10_storage_ptr", "typeString": "struct Election.Candidate"}}}, "visibility": "public"}, {"constant": false, "functionSelector": "4c726554", "id": 21, "mutability": "mutable", "name": "Candidate_count", "nameLocation": "373:15:0", "nodeType": "VariableDeclaration", "scope": 123, "src": "358:30:0", "stateVariable": true, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 20, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "358:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "public"}, {"body": {"id": 54, "nodeType": "Block", "src": "405:366:0", "statements": [{"expression": {"arguments": [{"hexValue": "4465766164617320416767617277616c", "id": 25, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "426:18:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_69c79ef2cac397e2861d1faa22597a09c4dfeae10977a9591173d8a5b33b3016", "typeString": "literal_string \"Devadas Aggarwal\""}, "value": "Devadas Aggarwal"}, {"hexValue": "426861726174697961204a616e617461205061727479", "id": 26, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "445:24:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_34b76bc47431a027fdaf3fbf527be0755a20fb4fd744ccab14ec8f1036aaf4db", "typeString": "literal_string \"Bharatiya Janata Party\""}, "value": "Bharatiya Janata Party"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_69c79ef2cac397e2861d1faa22597a09c4dfeae10977a9591173d8a5b33b3016", "typeString": "literal_string \"Devadas Aggarwal\""}, {"typeIdentifier": "t_stringliteral_34b76bc47431a027fdaf3fbf527be0755a20fb4fd744ccab14ec8f1036aaf4db", "typeString": "literal_string \"Bharatiya Janata Party\""}], "id": 24, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "413:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 27, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "413:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 28, "nodeType": "ExpressionStatement", "src": "413:57:0"}, {"expression": {"arguments": [{"hexValue": "50616c6c61762050616e646974", "id": 30, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "491:15:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1e93656a7430f3d8001849cc5fb1d48c6ddf01f7733be6caf5ae1171a52cb50b", "typeString": "literal_string \"Pallav Pandit\""}, "value": "Pallav Pandit"}, {"hexValue": "496e6469616e204e6174696f6e616c20436f6e6772657373", "id": 31, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "507:26:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_1cbc621d501b56ebfae60df08210944f4cc607ad94dae6ddf66d45013931ecc1", "typeString": "literal_string \"Indian National Congress\""}, "value": "Indian National Congress"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_1e93656a7430f3d8001849cc5fb1d48c6ddf01f7733be6caf5ae1171a52cb50b", "typeString": "literal_string \"Pallav Pandit\""}, {"typeIdentifier": "t_stringliteral_1cbc621d501b56ebfae60df08210944f4cc607ad94dae6ddf66d45013931ecc1", "typeString": "literal_string \"Indian National Congress\""}], "id": 29, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "478:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 32, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "478:56:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 33, "nodeType": "ExpressionStatement", "src": "478:56:0"}, {"expression": {"arguments": [{"hexValue": "486172697368204b687572616e61", "id": 35, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "555:16:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_c57a774ac92752d0bb346fab52985551ae346c540f88767476442ad2b93b3cee", "typeString": "literal_string \"Harish Khurana\""}, "value": "Harish Khurana"}, {"hexValue": "4e6174696f6e616c69737420436f6e6772657373205061727479", "id": 36, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "572:28:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_02b84200bd737da513e430ba43920ca8f6fc23114bf2c5d7088054a907f8b30b", "typeString": "literal_string \"Nationalist Congress Party\""}, "value": "Nationalist Congress Party"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_c57a774ac92752d0bb346fab52985551ae346c540f88767476442ad2b93b3cee", "typeString": "literal_string \"Harish Khurana\""}, {"typeIdentifier": "t_stringliteral_02b84200bd737da513e430ba43920ca8f6fc23114bf2c5d7088054a907f8b30b", "typeString": "literal_string \"Nationalist Congress Party\""}], "id": 34, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "542:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 37, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "542:59:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 38, "nodeType": "ExpressionStatement", "src": "542:59:0"}, {"expression": {"arguments": [{"hexValue": "536172697461204468616c6977616c", "id": 40, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "622:17:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_0d7a608f70d0f6e7c391379b018cfd2e734dd1a39ae0f500cec9b060e0dab1ab", "typeString": "literal_string \"Sarita Dhaliwal\""}, "value": "Sarita Dhaliwal"}, {"hexValue": "526173687472697961204a616e6174612044616c", "id": 41, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "640:22:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_37ac3b32711fe4a524deff71b9302b0938bb53ad0cb8113328372108e42d6483", "typeString": "literal_string \"Rashtriya Janata Dal\""}, "value": "Rashtriya Janata Dal"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_0d7a608f70d0f6e7c391379b018cfd2e734dd1a39ae0f500cec9b060e0dab1ab", "typeString": "literal_string \"Sarita Dhaliwal\""}, {"typeIdentifier": "t_stringliteral_37ac3b32711fe4a524deff71b9302b0938bb53ad0cb8113328372108e42d6483", "typeString": "literal_string \"Rashtriya Janata Dal\""}], "id": 39, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "609:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 42, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "609:54:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 43, "nodeType": "ExpressionStatement", "src": "609:54:0"}, {"expression": {"arguments": [{"hexValue": "4a616920476f79616c", "id": 45, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "684:11:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_636bc8bfdb2c199e54f0742853f4446cc8b919d75c3c4cf80f548f725f4a4793", "typeString": "literal_string \"Jai Goyal\""}, "value": "Jai Goyal"}, {"hexValue": "426168756a616e2053616d616a205061727479", "id": 46, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "696:21:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a92c5dd7ff82bd5e9b86d2d3e24a0285cbe6f7aaf5dc80354de9446f3973a824", "typeString": "literal_string \"Bahujan Samaj Party\""}, "value": "Bahujan Samaj Party"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_636bc8bfdb2c199e54f0742853f4446cc8b919d75c3c4cf80f548f725f4a4793", "typeString": "literal_string \"Jai Goyal\""}, {"typeIdentifier": "t_stringliteral_a92c5dd7ff82bd5e9b86d2d3e24a0285cbe6f7aaf5dc80354de9446f3973a824", "typeString": "literal_string \"Bahujan Samaj Party\""}], "id": 44, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "671:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 47, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "671:47:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 48, "nodeType": "ExpressionStatement", "src": "671:47:0"}, {"expression": {"arguments": [{"hexValue": "4e4f5441", "id": 50, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "739:6:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_a7d6ba322c91e2b6f6d586c97dcedf023d29562ce9202e6f37a660ef750b8d9f", "typeString": "literal_string \"NOTA\""}, "value": "NOTA"}, {"hexValue": "4e6f6e65204f66205468652041626f7665", "id": 51, "isConstant": false, "isLValue": false, "isPure": true, "kind": "string", "lValueRequested": false, "nodeType": "Literal", "src": "746:19:0", "typeDescriptions": {"typeIdentifier": "t_stringliteral_d1af46a474674bddf008113ac17e673e37f4bd6528fe67d5a5f90890ab95dfbc", "typeString": "literal_string \"None Of The Above\""}, "value": "None Of The Above"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_stringliteral_a7d6ba322c91e2b6f6d586c97dcedf023d29562ce9202e6f37a660ef750b8d9f", "typeString": "literal_string \"NOTA\""}, {"typeIdentifier": "t_stringliteral_d1af46a474674bddf008113ac17e673e37f4bd6528fe67d5a5f90890ab95dfbc", "typeString": "literal_string \"None Of The Above\""}], "id": 49, "name": "addCandidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 77, "src": "726:12:0", "typeDescriptions": {"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$", "typeString": "function (string memory,string memory)"}}, "id": 52, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "726:40:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 53, "nodeType": "ExpressionStatement", "src": "726:40:0"}]}, "id": 55, "implemented": true, "kind": "constructor", "modifiers": [], "name": "", "nameLocation": "-1:-1:-1", "nodeType": "FunctionDefinition", "parameters": {"id": 22, "nodeType": "ParameterList", "parameters": [], "src": "403:2:0"}, "returnParameters": {"id": 23, "nodeType": "ParameterList", "parameters": [], "src": "405:0:0"}, "scope": 123, "src": "392:379:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 76, "nodeType": "Block", "src": "846:107:0", "statements": [{"expression": {"id": 63, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "854:17:0", "subExpression": {"id": 62, "name": "Candidate_count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "854:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 64, "nodeType": "ExpressionStatement", "src": "854:17:0"}, {"expression": {"id": 74, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 65, "name": "Candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "879:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$10_storage_$", "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"}}, "id": 67, "indexExpression": {"id": 66, "name": "Candidate_count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "890:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "879:27:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$10_storage", "typeString": "struct Election.Candidate storage ref"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"arguments": [{"id": 69, "name": "Candidate_count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "917:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, {"id": 70, "name": "_name", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 57, "src": "933:5:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"id": 71, "name": "_party", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 59, "src": "939:6:0", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}}, {"hexValue": "30", "id": 72, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "946:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}], "expression": {"argumentTypes": [{"typeIdentifier": "t_uint256", "typeString": "uint256"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_string_memory_ptr", "typeString": "string memory"}, {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}], "id": 68, "name": "Candidate", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 10, "src": "907:9:0", "typeDescriptions": {"typeIdentifier": "t_type$_t_struct$_Candidate_$10_storage_ptr_$", "typeString": "type(struct Election.Candidate storage pointer)"}}, "id": 73, "isConstant": false, "isLValue": false, "isPure": false, "kind": "structConstructorCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "907:41:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$10_memory_ptr", "typeString": "struct Election.Candidate memory"}}, "src": "879:69:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$10_storage", "typeString": "struct Election.Candidate storage ref"}}, "id": 75, "nodeType": "ExpressionStatement", "src": "879:69:0"}]}, "id": 77, "implemented": true, "kind": "function", "modifiers": [], "name": "addCandidate", "nameLocation": "783:12:0", "nodeType": "FunctionDefinition", "parameters": {"id": 60, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 57, "mutability": "mutable", "name": "_name", "nameLocation": "810:5:0", "nodeType": "VariableDeclaration", "scope": 77, "src": "796:19:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 56, "name": "string", "nodeType": "ElementaryTypeName", "src": "796:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}, {"constant": false, "id": 59, "mutability": "mutable", "name": "_party", "nameLocation": "830:6:0", "nodeType": "VariableDeclaration", "scope": 77, "src": "816:20:0", "stateVariable": false, "storageLocation": "memory", "typeDescriptions": {"typeIdentifier": "t_string_memory_ptr", "typeString": "string"}, "typeName": {"id": 58, "name": "string", "nodeType": "ElementaryTypeName", "src": "816:6:0", "typeDescriptions": {"typeIdentifier": "t_string_storage_ptr", "typeString": "string"}}, "visibility": "internal"}], "src": "795:42:0"}, "returnParameters": {"id": 61, "nodeType": "ParameterList", "parameters": [], "src": "846:0:0"}, "scope": 123, "src": "774:179:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "private"}, {"body": {"id": 113, "nodeType": "Block", "src": "998:328:0", "statements": [{"expression": {"arguments": [{"id": 87, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "!", "prefix": true, "src": "1061:19:0", "subExpression": {"baseExpression": {"id": 83, "name": "voters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "1062:6:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 86, "indexExpression": {"expression": {"id": 84, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1069:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 85, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1069:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1062:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 82, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1053:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 88, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1053:28:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 89, "nodeType": "ExpressionStatement", "src": "1053:28:0"}, {"expression": {"arguments": [{"commonType": {"typeIdentifier": "t_bool", "typeString": "bool"}, "id": 97, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 93, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 91, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1129:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": ">", "rightExpression": {"hexValue": "30", "id": 92, "isConstant": false, "isLValue": false, "isPure": true, "kind": "number", "lValueRequested": false, "nodeType": "Literal", "src": "1143:1:0", "typeDescriptions": {"typeIdentifier": "t_rational_0_by_1", "typeString": "int_const 0"}, "value": "0"}, "src": "1129:15:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "BinaryOperation", "operator": "&&", "rightExpression": {"commonType": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "id": 96, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftExpression": {"id": 94, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1148:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "nodeType": "BinaryOperation", "operator": "<=", "rightExpression": {"id": 95, "name": "Candidate_count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "1162:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "src": "1148:29:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "src": "1129:48:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}], "expression": {"argumentTypes": [{"typeIdentifier": "t_bool", "typeString": "bool"}], "id": 90, "name": "require", "nodeType": "Identifier", "overloadedDeclarations": [-18, -18], "referencedDeclaration": -18, "src": "1121:7:0", "typeDescriptions": {"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$", "typeString": "function (bool) pure"}}, "id": 98, "isConstant": false, "isLValue": false, "isPure": false, "kind": "functionCall", "lValueRequested": false, "names": [], "nodeType": "FunctionCall", "src": "1121:57:0", "tryCall": false, "typeDescriptions": {"typeIdentifier": "t_tuple$__$", "typeString": "tuple()"}}, "id": 99, "nodeType": "ExpressionStatement", "src": "1121:57:0"}, {"expression": {"id": 105, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "leftHandSide": {"baseExpression": {"id": 100, "name": "voters", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 14, "src": "1217:6:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_address_$_t_bool_$", "typeString": "mapping(address => bool)"}}, "id": 103, "indexExpression": {"expression": {"id": 101, "name": "msg", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": -15, "src": "1224:3:0", "typeDescriptions": {"typeIdentifier": "t_magic_message", "typeString": "msg"}}, "id": 102, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "memberName": "sender", "nodeType": "MemberAccess", "src": "1224:10:0", "typeDescriptions": {"typeIdentifier": "t_address", "typeString": "address"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "nodeType": "IndexAccess", "src": "1217:18:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "nodeType": "Assignment", "operator": "=", "rightHandSide": {"hexValue": "74727565", "id": 104, "isConstant": false, "isLValue": false, "isPure": true, "kind": "bool", "lValueRequested": false, "nodeType": "Literal", "src": "1236:4:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}, "value": "true"}, "src": "1217:23:0", "typeDescriptions": {"typeIdentifier": "t_bool", "typeString": "bool"}}, "id": 106, "nodeType": "ExpressionStatement", "src": "1217:23:0"}, {"expression": {"id": 111, "isConstant": false, "isLValue": false, "isPure": false, "lValueRequested": false, "nodeType": "UnaryOperation", "operator": "++", "prefix": false, "src": "1284:37:0", "subExpression": {"expression": {"baseExpression": {"id": 107, "name": "Candidates", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 19, "src": "1284:10:0", "typeDescriptions": {"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Candidate_$10_storage_$", "typeString": "mapping(uint256 => struct Election.Candidate storage ref)"}}, "id": 109, "indexExpression": {"id": 108, "name": "_candidateId", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 79, "src": "1295:12:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": false, "nodeType": "IndexAccess", "src": "1284:24:0", "typeDescriptions": {"typeIdentifier": "t_struct$_Candidate_$10_storage", "typeString": "struct Election.Candidate storage ref"}}, "id": 110, "isConstant": false, "isLValue": true, "isPure": false, "lValueRequested": true, "memberName": "vote_count", "nodeType": "MemberAccess", "referencedDeclaration": 9, "src": "1284:35:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "id": 112, "nodeType": "ExpressionStatement", "src": "1284:37:0"}]}, "functionSelector": "dcd6a5cd", "id": 114, "implemented": true, "kind": "function", "modifiers": [], "name": "Vote", "nameLocation": "965:4:0", "nodeType": "FunctionDefinition", "parameters": {"id": 80, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 79, "mutability": "mutable", "name": "_candidateId", "nameLocation": "978:12:0", "nodeType": "VariableDeclaration", "scope": 114, "src": "970:20:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 78, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "970:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "969:22:0"}, "returnParameters": {"id": 81, "nodeType": "ParameterList", "parameters": [], "src": "998:0:0"}, "scope": 123, "src": "956:370:0", "stateMutability": "nonpayable", "virtual": false, "visibility": "public"}, {"body": {"id": 121, "nodeType": "Block", "src": "1380:36:0", "statements": [{"expression": {"id": 119, "name": "Candidate_count", "nodeType": "Identifier", "overloadedDeclarations": [], "referencedDeclaration": 21, "src": "1395:15:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "functionReturnParameters": 118, "id": 120, "nodeType": "Return", "src": "1388:22:0"}]}, "functionSelector": "b97b6ded", "id": 122, "implemented": true, "kind": "function", "modifiers": [], "name": "viewvoters", "nameLocation": "1338:10:0", "nodeType": "FunctionDefinition", "parameters": {"id": 115, "nodeType": "ParameterList", "parameters": [], "src": "1348:2:0"}, "returnParameters": {"id": 118, "nodeType": "ParameterList", "parameters": [{"constant": false, "id": 117, "mutability": "mutable", "name": "", "nameLocation": "-1:-1:-1", "nodeType": "VariableDeclaration", "scope": 122, "src": "1372:7:0", "stateVariable": false, "storageLocation": "default", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}, "typeName": {"id": 116, "name": "uint256", "nodeType": "ElementaryTypeName", "src": "1372:7:0", "typeDescriptions": {"typeIdentifier": "t_uint256", "typeString": "uint256"}}, "visibility": "internal"}], "src": "1371:9:0"}, "scope": 123, "src": "1329:87:0", "stateMutability": "view", "virtual": false, "visibility": "public"}], "scope": 124, "src": "56:1363:0", "usedErrors": []}], "src": "32:1387:0"}, "bytecode": "608060405234801561001057600080fd5b5061007e6040518060400160405280601081526020016f11195d9859185cc81059d9d85c9dd85b60821b8152506040518060400160405280601681526020017f426861726174697961204a616e6174612050617274790000000000000000000081525061027f60201b60201c565b6100e86040518060400160405280600d81526020016c14185b1b185d8814185b991a5d609a1b8152506040518060400160405280601881526020017f496e6469616e204e6174696f6e616c20436f6e6772657373000000000000000081525061027f60201b60201c565b6101536040518060400160405280600e81526020016d486172697368204b687572616e6160901b8152506040518060400160405280601a81526020017f4e6174696f6e616c69737420436f6e677265737320506172747900000000000081525061027f60201b60201c565b6101bf6040518060400160405280600f81526020016e14d85c9a5d1848111a185b1a5dd85b608a1b8152506040518060400160405280601481526020017f526173687472697961204a616e6174612044616c00000000000000000000000081525061027f60201b60201c565b6102256040518060400160405280600981526020016812985a4811dbde585b60ba1b8152506040518060400160405280601381526020017f426168756a616e2053616d616a2050617274790000000000000000000000000081525061027f60201b60201c565b61027a604051806040016040528060048152602001634e4f544160e01b815250604051806040016040528060118152602001704e6f6e65204f66205468652041626f766560781b81525061027f60201b60201c565b61040f565b6002805490600061028f836103ab565b90915550506040805160808101825260025480825260208083018681528385018690526000606085018190529283526001808352949092208351815591518051939492936102e4938501929190910190610312565b5060408201518051610300916002840191602090910190610312565b50606082015181600301559050505050565b82805461031e906103d4565b90600052602060002090601f0160209004810192826103405760008555610386565b82601f1061035957805160ff1916838001178555610386565b82800160010185558215610386579182015b8281111561038657825182559160200191906001019061036b565b50610392929150610396565b5090565b5b808211156103925760008155600101610397565b60006000198214156103cd57634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c908216806103e857607f821691505b6020821081141561040957634e487b7160e01b600052602260045260246000fd5b50919050565b6104098061041e6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063290e92121461005c5780634c72655414610088578063a3ec138d1461009f578063b97b6ded146100d2578063dcd6a5cd146100da575b600080fd5b61006f61006a36600461029c565b6100ef565b60405161007f9493929190610302565b60405180910390f35b61009160025481565b60405190815260200161007f565b6100c26100ad36600461033f565b60006020819052908152604090205460ff1681565b604051901515815260200161007f565b600254610091565b6100ed6100e836600461029c565b610227565b005b6001602081905260009182526040909120805491810180546101109061036f565b80601f016020809104026020016040519081016040528092919081815260200182805461013c9061036f565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b50505050509080600201805461019e9061036f565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca9061036f565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b5050505050908060030154905084565b3360009081526020819052604090205460ff161561024457600080fd5b60008111801561025657506002548111155b61025f57600080fd5b33600090815260208181526040808320805460ff191660019081179091558484529091528120600301805491610294836103aa565b919050555050565b6000602082840312156102ae57600080fd5b5035919050565b6000815180845260005b818110156102db576020818501810151868301820152016102bf565b818111156102ed576000602083870101525b50601f01601f19169290920160200192915050565b84815260806020820152600061031b60808301866102b5565b828103604084015261032d81866102b5565b91505082606083015295945050505050565b60006020828403121561035157600080fd5b81356001600160a01b038116811461036857600080fd5b9392505050565b600181811c9082168061038357607f821691505b602082108114156103a457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156103cc57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212207f5a14fd305dda013e5bb8969eaa191e67a95f4af9b959db53a5b0e95ec01a5764736f6c634300080b0033", "bytecodeSha1": "53f6f6ada3200d6400ea7ffe5f9733641698dea9", "compiler": {"evm_version": "istanbul", "optimizer": {"enabled": true, "runs": 200}, "version": "0.8.11+commit.d7f03943"}, "contractName": "Election", "coverageMap": {"branches": {"0": {"Election.Vote": {"5": [1061, 1080, true], "6": [1129, 1144, false], "7": [1148, 1177, true]}}}, "statements": {"0": {"Election.Vote": {"1": [1053, 1081], "2": [1121, 1178], "3": [1217, 1240], "4": [1284, 1321]}, "Election.viewvoters": {"0": [1388, 1410]}}}}, "dependencies": [], "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063290e92121461005c5780634c72655414610088578063a3ec138d1461009f578063b97b6ded146100d2578063dcd6a5cd146100da575b600080fd5b61006f61006a36600461029c565b6100ef565b60405161007f9493929190610302565b60405180910390f35b61009160025481565b60405190815260200161007f565b6100c26100ad36600461033f565b60006020819052908152604090205460ff1681565b604051901515815260200161007f565b600254610091565b6100ed6100e836600461029c565b610227565b005b6001602081905260009182526040909120805491810180546101109061036f565b80601f016020809104026020016040519081016040528092919081815260200182805461013c9061036f565b80156101895780601f1061015e57610100808354040283529160200191610189565b820191906000526020600020905b81548152906001019060200180831161016c57829003601f168201915b50505050509080600201805461019e9061036f565b80601f01602080910402602001604051908101604052809291908181526020018280546101ca9061036f565b80156102175780601f106101ec57610100808354040283529160200191610217565b820191906000526020600020905b8154815290600101906020018083116101fa57829003601f168201915b5050505050908060030154905084565b3360009081526020819052604090205460ff161561024457600080fd5b60008111801561025657506002548111155b61025f57600080fd5b33600090815260208181526040808320805460ff191660019081179091558484529091528120600301805491610294836103aa565b919050555050565b6000602082840312156102ae57600080fd5b5035919050565b6000815180845260005b818110156102db576020818501810151868301820152016102bf565b818111156102ed576000602083870101525b50601f01601f19169290920160200192915050565b84815260806020820152600061031b60808301866102b5565b828103604084015261032d81866102b5565b91505082606083015295945050505050565b60006020828403121561035157600080fd5b81356001600160a01b038116811461036857600080fd5b9392505050565b600181811c9082168061038357607f821691505b602082108114156103a457634e487b7160e01b600052602260045260246000fd5b50919050565b60006000198214156103cc57634e487b7160e01b600052601160045260246000fd5b506001019056fea26469706673582212207f5a14fd305dda013e5bb8969eaa191e67a95f4af9b959db53a5b0e95ec01a5764736f6c634300080b0033", "deployedSourceMap": "56:1363:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;288:45;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;358:30;;;;;;;;;1354:25:1;;;1342:2;1327:18;358:30:0;1208:177:1;227:36:0;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1846:14:1;;1839:22;1821:41;;1809:2;1794:18;227:36:0;1681:187:1;1329:87:0;1395:15;;1329:87;;956:370;;;;;;:::i;:::-;;:::i;:::-;;288:45;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;956:370::-;1069:10;1062:6;:18;;;;;;;;;;;;;1061:19;1053:28;;;;;;1143:1;1129:12;:15;:48;;;;;1162:15;;1148:12;:29;;1129:48;1121:57;;;;;;1224:10;1217:6;:18;;;;;;;;;;;:23;;-1:-1:-1;;1217:23:0;1236:4;1217:23;;;;;;1284:24;;;;;;;;:35;;:37;;;;;;:::i;:::-;;;;;;956:370;:::o;14:180:1:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:1;;14:180;-1:-1:-1;14:180:1:o;199:472::-;241:3;279:5;273:12;306:6;301:3;294:19;331:1;341:162;355:6;352:1;349:13;341:162;;;417:4;473:13;;;469:22;;463:29;445:11;;;441:20;;434:59;370:12;341:162;;;521:6;518:1;515:13;512:87;;;587:1;580:4;571:6;566:3;562:16;558:27;551:38;512:87;-1:-1:-1;653:2:1;632:15;-1:-1:-1;;628:29:1;619:39;;;;660:4;615:50;;199:472;-1:-1:-1;;199:472:1:o;676:527::-;929:6;918:9;911:25;972:3;967:2;956:9;952:18;945:31;892:4;999:46;1040:3;1029:9;1025:19;1017:6;999:46;:::i;:::-;1093:9;1085:6;1081:22;1076:2;1065:9;1061:18;1054:50;1121:33;1147:6;1139;1121:33;:::i;:::-;1113:41;;;1190:6;1185:2;1174:9;1170:18;1163:34;676:527;;;;;;;:::o;1390:286::-;1449:6;1502:2;1490:9;1481:7;1477:23;1473:32;1470:52;;;1518:1;1515;1508:12;1470:52;1544:23;;-1:-1:-1;;;;;1596:31:1;;1586:42;;1576:70;;1642:1;1639;1632:12;1576:70;1665:5;1390:286;-1:-1:-1;;;1390:286:1:o;1873:380::-;1952:1;1948:12;;;;1995;;;2016:61;;2070:4;2062:6;2058:17;2048:27;;2016:61;2123:2;2115:6;2112:14;2092:18;2089:38;2086:161;;;2169:10;2164:3;2160:20;2157:1;2150:31;2204:4;2201:1;2194:15;2232:4;2229:1;2222:15;2086:161;;1873:380;;;:::o;2258:232::-;2297:3;-1:-1:-1;;2318:17:1;;2315:140;;;2377:10;2372:3;2368:20;2365:1;2358:31;2412:4;2409:1;2402:15;2440:4;2437:1;2430:15;2315:140;-1:-1:-1;2482:1:1;2471:13;;2258:232::o", "language": "Solidity", "natspec": {"kind": "dev", "methods": {}, "version": 1}, "offset": [56, 1419], "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x290E9212 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x4C726554 EQ PUSH2 0x88 JUMPI DUP1 PUSH4 0xA3EC138D EQ PUSH2 0x9F JUMPI DUP1 PUSH4 0xB97B6DED EQ PUSH2 0xD2 JUMPI DUP1 PUSH4 0xDCD6A5CD EQ PUSH2 0xDA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x29C JUMP JUMPDEST PUSH2 0xEF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7F SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x91 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7F JUMP JUMPDEST PUSH2 0xC2 PUSH2 0xAD CALLDATASIZE PUSH1 0x4 PUSH2 0x33F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7F JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x91 JUMP JUMPDEST PUSH2 0xED PUSH2 0xE8 CALLDATASIZE PUSH1 0x4 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x227 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD SWAP2 DUP2 ADD DUP1 SLOAD PUSH2 0x110 SWAP1 PUSH2 0x36F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13C SWAP1 PUSH2 0x36F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x189 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x15E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x189 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x16C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x19E SWAP1 PUSH2 0x36F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CA SWAP1 PUSH2 0x36F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x217 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1EC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x217 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1FA JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 POP DUP5 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x244 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 GT DUP1 ISZERO PUSH2 0x256 JUMPI POP PUSH1 0x2 SLOAD DUP2 GT ISZERO JUMPDEST PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP5 DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 PUSH1 0x3 ADD DUP1 SLOAD SWAP2 PUSH2 0x294 DUP4 PUSH2 0x3AA JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2DB JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2BF JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x80 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x31B PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2B5 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x40 DUP5 ADD MSTORE PUSH2 0x32D DUP2 DUP7 PUSH2 0x2B5 JUMP JUMPDEST SWAP2 POP POP DUP3 PUSH1 0x60 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x351 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x368 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x383 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3A4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x3CC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH32 0x5A14FD305DDA013E5BB8969EAA191E67A95F4AF9B959DB53A5B0E95EC01A5764 PUSH20 0x6F6C634300080B00330000000000000000000000 ", "pcMap": {"0": {"offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x80"}, "2": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x40"}, "4": {"fn": null, "offset": [56, 1419], "op": "MSTORE", "path": "0"}, "5": {"fn": null, "offset": [56, 1419], "op": "CALLVALUE", "path": "0"}, "6": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "7": {"fn": null, "offset": [56, 1419], "op": "ISZERO", "path": "0"}, "8": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0x10"}, "11": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "12": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x0"}, "14": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "15": {"dev": "Cannot send ether to nonpayable function", "fn": null, "offset": [56, 1419], "op": "REVERT", "path": "0"}, "16": {"fn": null, "offset": [56, 1419], "op": "JUMPDEST", "path": "0"}, "17": {"fn": null, "offset": [56, 1419], "op": "POP", "path": "0"}, "18": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x4"}, "20": {"fn": null, "offset": [56, 1419], "op": "CALLDATASIZE", "path": "0"}, "21": {"fn": null, "offset": [56, 1419], "op": "LT", "path": "0"}, "22": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0x57"}, "25": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "26": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x0"}, "28": {"fn": null, "offset": [56, 1419], "op": "CALLDATALOAD", "path": "0"}, "29": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0xE0"}, "31": {"fn": null, "offset": [56, 1419], "op": "SHR", "path": "0"}, "32": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "33": {"fn": null, "offset": [56, 1419], "op": "PUSH4", "path": "0", "value": "0x290E9212"}, "38": {"fn": null, "offset": [56, 1419], "op": "EQ", "path": "0"}, "39": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0x5C"}, "42": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "43": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "44": {"fn": null, "offset": [56, 1419], "op": "PUSH4", "path": "0", "value": "0x4C726554"}, "49": {"fn": null, "offset": [56, 1419], "op": "EQ", "path": "0"}, "50": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0x88"}, "53": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "54": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "55": {"fn": null, "offset": [56, 1419], "op": "PUSH4", "path": "0", "value": "0xA3EC138D"}, "60": {"fn": null, "offset": [56, 1419], "op": "EQ", "path": "0"}, "61": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0x9F"}, "64": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "65": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "66": {"fn": null, "offset": [56, 1419], "op": "PUSH4", "path": "0", "value": "0xB97B6DED"}, "71": {"fn": null, "offset": [56, 1419], "op": "EQ", "path": "0"}, "72": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0xD2"}, "75": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "76": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "77": {"fn": null, "offset": [56, 1419], "op": "PUSH4", "path": "0", "value": "0xDCD6A5CD"}, "82": {"fn": null, "offset": [56, 1419], "op": "EQ", "path": "0"}, "83": {"fn": null, "offset": [56, 1419], "op": "PUSH2", "path": "0", "value": "0xDA"}, "86": {"fn": null, "offset": [56, 1419], "op": "JUMPI", "path": "0"}, "87": {"fn": null, "offset": [56, 1419], "op": "JUMPDEST", "path": "0"}, "88": {"fn": null, "offset": [56, 1419], "op": "PUSH1", "path": "0", "value": "0x0"}, "90": {"fn": null, "offset": [56, 1419], "op": "DUP1", "path": "0"}, "91": {"first_revert": true, "fn": null, "offset": [56, 1419], "op": "REVERT", "path": "0"}, "92": {"offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "93": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x6F"}, "96": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x6A"}, "99": {"fn": null, "offset": [288, 333], "op": "CALLDATASIZE", "path": "0"}, "100": {"fn": null, "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x4"}, "102": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x29C"}, "105": {"fn": null, "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "106": {"fn": null, "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "107": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0xEF"}, "110": {"fn": null, "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "111": {"fn": null, "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "112": {"fn": null, "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "114": {"fn": null, "offset": [288, 333], "op": "MLOAD", "path": "0"}, "115": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x7F"}, "118": {"fn": null, "offset": [288, 333], "op": "SWAP5", "path": "0"}, "119": {"fn": null, "offset": [288, 333], "op": "SWAP4", "path": "0"}, "120": {"fn": null, "offset": [288, 333], "op": "SWAP3", "path": "0"}, "121": {"fn": null, "offset": [288, 333], "op": "SWAP2", "path": "0"}, "122": {"fn": null, "offset": [288, 333], "op": "SWAP1", "path": "0"}, "123": {"fn": null, "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x302"}, "126": {"fn": null, "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "127": {"fn": null, "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "128": {"fn": null, "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "130": {"fn": null, "offset": [288, 333], "op": "MLOAD", "path": "0"}, "131": {"fn": null, "offset": [288, 333], "op": "DUP1", "path": "0"}, "132": {"fn": null, "offset": [288, 333], "op": "SWAP2", "path": "0"}, "133": {"fn": null, "offset": [288, 333], "op": "SUB", "path": "0"}, "134": {"fn": null, "offset": [288, 333], "op": "SWAP1", "path": "0"}, "135": {"fn": null, "offset": [288, 333], "op": "RETURN", "path": "0"}, "136": {"offset": [358, 388], "op": "JUMPDEST", "path": "0"}, "137": {"fn": null, "offset": [358, 388], "op": "PUSH2", "path": "0", "value": "0x91"}, "140": {"fn": null, "offset": [358, 388], "op": "PUSH1", "path": "0", "value": "0x2"}, "142": {"fn": null, "offset": [358, 388], "op": "SLOAD", "path": "0"}, "143": {"fn": null, "offset": [358, 388], "op": "DUP2", "path": "0"}, "144": {"fn": null, "offset": [358, 388], "op": "JUMP", "path": "0"}, "145": {"fn": null, "offset": [358, 388], "op": "JUMPDEST", "path": "0"}, "146": {"fn": null, "offset": [358, 388], "op": "PUSH1", "path": "0", "value": "0x40"}, "148": {"fn": null, "offset": [358, 388], "op": "MLOAD", "path": "0"}, "149": {"op": "SWAP1"}, "150": {"op": "DUP2"}, "151": {"op": "MSTORE"}, "152": {"op": "PUSH1", "value": "0x20"}, "154": {"op": "ADD"}, "155": {"offset": [358, 388], "op": "PUSH2", "path": "0", "value": "0x7F"}, "158": {"op": "JUMP"}, "159": {"offset": [227, 263], "op": "JUMPDEST", "path": "0"}, "160": {"fn": null, "offset": [227, 263], "op": "PUSH2", "path": "0", "value": "0xC2"}, "163": {"fn": null, "offset": [227, 263], "op": "PUSH2", "path": "0", "value": "0xAD"}, "166": {"fn": null, "offset": [227, 263], "op": "CALLDATASIZE", "path": "0"}, "167": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0x4"}, "169": {"fn": null, "offset": [227, 263], "op": "PUSH2", "path": "0", "value": "0x33F"}, "172": {"fn": null, "jump": "i", "offset": [227, 263], "op": "JUMP", "path": "0"}, "173": {"fn": null, "offset": [227, 263], "op": "JUMPDEST", "path": "0"}, "174": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0x0"}, "176": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0x20"}, "178": {"fn": null, "offset": [227, 263], "op": "DUP2", "path": "0"}, "179": {"fn": null, "offset": [227, 263], "op": "SWAP1", "path": "0"}, "180": {"fn": null, "offset": [227, 263], "op": "MSTORE", "path": "0"}, "181": {"fn": null, "offset": [227, 263], "op": "SWAP1", "path": "0"}, "182": {"fn": null, "offset": [227, 263], "op": "DUP2", "path": "0"}, "183": {"fn": null, "offset": [227, 263], "op": "MSTORE", "path": "0"}, "184": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0x40"}, "186": {"fn": null, "offset": [227, 263], "op": "SWAP1", "path": "0"}, "187": {"fn": null, "offset": [227, 263], "op": "KECCAK256", "path": "0"}, "188": {"fn": null, "offset": [227, 263], "op": "SLOAD", "path": "0"}, "189": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0xFF"}, "191": {"fn": null, "offset": [227, 263], "op": "AND", "path": "0"}, "192": {"fn": null, "offset": [227, 263], "op": "DUP2", "path": "0"}, "193": {"fn": null, "offset": [227, 263], "op": "JUMP", "path": "0"}, "194": {"fn": null, "offset": [227, 263], "op": "JUMPDEST", "path": "0"}, "195": {"fn": null, "offset": [227, 263], "op": "PUSH1", "path": "0", "value": "0x40"}, "197": {"fn": null, "offset": [227, 263], "op": "MLOAD", "path": "0"}, "198": {"op": "SWAP1"}, "199": {"op": "ISZERO"}, "200": {"op": "ISZERO"}, "201": {"op": "DUP2"}, "202": {"op": "MSTORE"}, "203": {"op": "PUSH1", "value": "0x20"}, "205": {"op": "ADD"}, "206": {"offset": [227, 263], "op": "PUSH2", "path": "0", "value": "0x7F"}, "209": {"op": "JUMP"}, "210": {"fn": "Election.viewvoters", "offset": [1329, 1416], "op": "JUMPDEST", "path": "0"}, "211": {"fn": "Election.viewvoters", "offset": [1395, 1410], "op": "PUSH1", "path": "0", "statement": 0, "value": "0x2"}, "213": {"fn": "Election.viewvoters", "offset": [1395, 1410], "op": "SLOAD", "path": "0"}, "214": {"fn": "Election.viewvoters", "offset": [1329, 1416], "op": "PUSH2", "path": "0", "value": "0x91"}, "217": {"fn": "Election.viewvoters", "offset": [1329, 1416], "op": "JUMP", "path": "0"}, "218": {"fn": "Election.Vote", "offset": [956, 1326], "op": "JUMPDEST", "path": "0"}, "219": {"fn": "Election.Vote", "offset": [956, 1326], "op": "PUSH2", "path": "0", "value": "0xED"}, "222": {"fn": "Election.Vote", "offset": [956, 1326], "op": "PUSH2", "path": "0", "value": "0xE8"}, "225": {"fn": "Election.Vote", "offset": [956, 1326], "op": "CALLDATASIZE", "path": "0"}, "226": {"fn": "Election.Vote", "offset": [956, 1326], "op": "PUSH1", "path": "0", "value": "0x4"}, "228": {"fn": "Election.Vote", "offset": [956, 1326], "op": "PUSH2", "path": "0", "value": "0x29C"}, "231": {"fn": "Election.Vote", "jump": "i", "offset": [956, 1326], "op": "JUMP", "path": "0"}, "232": {"fn": "Election.Vote", "offset": [956, 1326], "op": "JUMPDEST", "path": "0"}, "233": {"fn": "Election.Vote", "offset": [956, 1326], "op": "PUSH2", "path": "0", "value": "0x227"}, "236": {"fn": "Election.Vote", "jump": "i", "offset": [956, 1326], "op": "JUMP", "path": "0"}, "237": {"fn": "Election.Vote", "offset": [956, 1326], "op": "JUMPDEST", "path": "0"}, "238": {"fn": "Election.Vote", "offset": [956, 1326], "op": "STOP", "path": "0"}, "239": {"offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "240": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1"}, "242": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "244": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "245": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "246": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "247": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x0"}, "249": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "250": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "251": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "252": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "254": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "255": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "256": {"fn": "Election.Vote", "offset": [288, 333], "op": "KECCAK256", "path": "0"}, "257": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "258": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "259": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "260": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "261": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "262": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "263": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "264": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x110"}, "267": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "268": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x36F"}, "271": {"fn": "Election.Vote", "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "272": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "273": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "274": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "276": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "277": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "279": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "280": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "281": {"fn": "Election.Vote", "offset": [288, 333], "op": "DIV", "path": "0"}, "282": {"fn": "Election.Vote", "offset": [288, 333], "op": "MUL", "path": "0"}, "283": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "285": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "286": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "288": {"fn": "Election.Vote", "offset": [288, 333], "op": "MLOAD", "path": "0"}, "289": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "290": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "291": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "292": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "294": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "295": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "296": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP3", "path": "0"}, "297": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "298": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "299": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "300": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "301": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "302": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "304": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "305": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "306": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "307": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "308": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x13C"}, "311": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "312": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x36F"}, "315": {"fn": "Election.Vote", "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "316": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "317": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "318": {"fn": "Election.Vote", "offset": [288, 333], "op": "ISZERO", "path": "0"}, "319": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x189"}, "322": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "323": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "324": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "326": {"fn": "Election.Vote", "offset": [288, 333], "op": "LT", "path": "0"}, "327": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x15E"}, "330": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "331": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x100"}, "334": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "335": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "336": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "337": {"fn": "Election.Vote", "offset": [288, 333], "op": "DIV", "path": "0"}, "338": {"fn": "Election.Vote", "offset": [288, 333], "op": "MUL", "path": "0"}, "339": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "340": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "341": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "342": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "344": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "345": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "346": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x189"}, "349": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMP", "path": "0"}, "350": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "351": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "352": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "353": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "354": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "355": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x0"}, "357": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "358": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "360": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x0"}, "362": {"fn": "Election.Vote", "offset": [288, 333], "op": "KECCAK256", "path": "0"}, "363": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "364": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "365": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "366": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "367": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "368": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "369": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "370": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1"}, "372": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "373": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "374": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "376": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "377": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "378": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "379": {"fn": "Election.Vote", "offset": [288, 333], "op": "GT", "path": "0"}, "380": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x16C"}, "383": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "384": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "385": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "386": {"fn": "Election.Vote", "offset": [288, 333], "op": "SUB", "path": "0"}, "387": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "389": {"fn": "Election.Vote", "offset": [288, 333], "op": "AND", "path": "0"}, "390": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "391": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "392": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "393": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "394": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "395": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "396": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "397": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "398": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "399": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "400": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "401": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x2"}, "403": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "404": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "405": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "406": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x19E"}, "409": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "410": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x36F"}, "413": {"fn": "Election.Vote", "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "414": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "415": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "416": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "418": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "419": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "421": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "422": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "423": {"fn": "Election.Vote", "offset": [288, 333], "op": "DIV", "path": "0"}, "424": {"fn": "Election.Vote", "offset": [288, 333], "op": "MUL", "path": "0"}, "425": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "427": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "428": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "430": {"fn": "Election.Vote", "offset": [288, 333], "op": "MLOAD", "path": "0"}, "431": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "432": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "433": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "434": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x40"}, "436": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "437": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "438": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP3", "path": "0"}, "439": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "440": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "441": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "442": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "443": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "444": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "446": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "447": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "448": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "449": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "450": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x1CA"}, "453": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "454": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x36F"}, "457": {"fn": "Election.Vote", "jump": "i", "offset": [288, 333], "op": "JUMP", "path": "0"}, "458": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "459": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "460": {"fn": "Election.Vote", "offset": [288, 333], "op": "ISZERO", "path": "0"}, "461": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x217"}, "464": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "465": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "466": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "468": {"fn": "Election.Vote", "offset": [288, 333], "op": "LT", "path": "0"}, "469": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x1EC"}, "472": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "473": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x100"}, "476": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "477": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "478": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "479": {"fn": "Election.Vote", "offset": [288, 333], "op": "DIV", "path": "0"}, "480": {"fn": "Election.Vote", "offset": [288, 333], "op": "MUL", "path": "0"}, "481": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "482": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "483": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "484": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "486": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "487": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "488": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x217"}, "491": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMP", "path": "0"}, "492": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "493": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "494": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "495": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "496": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "497": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x0"}, "499": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "500": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "502": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x0"}, "504": {"fn": "Election.Vote", "offset": [288, 333], "op": "KECCAK256", "path": "0"}, "505": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "506": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "507": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "508": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "509": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP2", "path": "0"}, "510": {"fn": "Election.Vote", "offset": [288, 333], "op": "MSTORE", "path": "0"}, "511": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "512": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1"}, "514": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "515": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "516": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x20"}, "518": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "519": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "520": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP4", "path": "0"}, "521": {"fn": "Election.Vote", "offset": [288, 333], "op": "GT", "path": "0"}, "522": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH2", "path": "0", "value": "0x1FA"}, "525": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPI", "path": "0"}, "526": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "527": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "528": {"fn": "Election.Vote", "offset": [288, 333], "op": "SUB", "path": "0"}, "529": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x1F"}, "531": {"fn": "Election.Vote", "offset": [288, 333], "op": "AND", "path": "0"}, "532": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP3", "path": "0"}, "533": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "534": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP2", "path": "0"}, "535": {"fn": "Election.Vote", "offset": [288, 333], "op": "JUMPDEST", "path": "0"}, "536": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "537": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "538": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "539": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "540": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "541": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "542": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP1", "path": "0"}, "543": {"fn": "Election.Vote", "offset": [288, 333], "op": "PUSH1", "path": "0", "value": "0x3"}, "545": {"fn": "Election.Vote", "offset": [288, 333], "op": "ADD", "path": "0"}, "546": {"fn": "Election.Vote", "offset": [288, 333], "op": "SLOAD", "path": "0"}, "547": {"fn": "Election.Vote", "offset": [288, 333], "op": "SWAP1", "path": "0"}, "548": {"fn": "Election.Vote", "offset": [288, 333], "op": "POP", "path": "0"}, "549": {"fn": "Election.Vote", "offset": [288, 333], "op": "DUP5", "path": "0"}, "550": {"fn": "Election.Vote", "jump": "o", "offset": [288, 333], "op": "JUMP", "path": "0"}, "551": {"fn": "Election.Vote", "offset": [956, 1326], "op": "JUMPDEST", "path": "0"}, "552": {"fn": "Election.Vote", "offset": [1069, 1079], "op": "CALLER", "path": "0", "statement": 1}, "553": {"fn": "Election.Vote", "offset": [1062, 1068], "op": "PUSH1", "path": "0", "value": "0x0"}, "555": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "SWAP1", "path": "0"}, "556": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "DUP2", "path": "0"}, "557": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "MSTORE", "path": "0"}, "558": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "PUSH1", "path": "0", "value": "0x20"}, "560": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "DUP2", "path": "0"}, "561": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "SWAP1", "path": "0"}, "562": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "MSTORE", "path": "0"}, "563": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "PUSH1", "path": "0", "value": "0x40"}, "565": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "SWAP1", "path": "0"}, "566": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "KECCAK256", "path": "0"}, "567": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "SLOAD", "path": "0"}, "568": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "PUSH1", "path": "0", "value": "0xFF"}, "570": {"fn": "Election.Vote", "offset": [1062, 1080], "op": "AND", "path": "0"}, "571": {"branch": 5, "fn": "Election.Vote", "offset": [1061, 1080], "op": "ISZERO", "path": "0"}, "572": {"fn": "Election.Vote", "offset": [1053, 1081], "op": "PUSH2", "path": "0", "value": "0x244"}, "575": {"branch": 5, "fn": "Election.Vote", "offset": [1053, 1081], "op": "JUMPI", "path": "0"}, "576": {"fn": "Election.Vote", "offset": [1053, 1081], "op": "PUSH1", "path": "0", "value": "0x0"}, "578": {"fn": "Election.Vote", "offset": [1053, 1081], "op": "DUP1", "path": "0"}, "579": {"fn": "Election.Vote", "offset": [1053, 1081], "op": "REVERT", "path": "0"}, "580": {"fn": "Election.Vote", "offset": [1053, 1081], "op": "JUMPDEST", "path": "0"}, "581": {"fn": "Election.Vote", "offset": [1143, 1144], "op": "PUSH1", "path": "0", "statement": 2, "value": "0x0"}, "583": {"fn": "Election.Vote", "offset": [1129, 1141], "op": "DUP2", "path": "0"}, "584": {"branch": 6, "fn": "Election.Vote", "offset": [1129, 1144], "op": "GT", "path": "0"}, "585": {"fn": "Election.Vote", "offset": [1129, 1177], "op": "DUP1", "path": "0"}, "586": {"fn": "Election.Vote", "offset": [1129, 1177], "op": "ISZERO", "path": "0"}, "587": {"fn": "Election.Vote", "offset": [1129, 1177], "op": "PUSH2", "path": "0", "value": "0x256"}, "590": {"branch": 6, "fn": "Election.Vote", "offset": [1129, 1177], "op": "JUMPI", "path": "0"}, "591": {"fn": "Election.Vote", "offset": [1129, 1177], "op": "POP", "path": "0"}, "592": {"fn": "Election.Vote", "offset": [1162, 1177], "op": "PUSH1", "path": "0", "value": "0x2"}, "594": {"fn": "Election.Vote", "offset": [1162, 1177], "op": "SLOAD", "path": "0"}, "595": {"fn": "Election.Vote", "offset": [1148, 1160], "op": "DUP2", "path": "0"}, "596": {"fn": "Election.Vote", "offset": [1148, 1177], "op": "GT", "path": "0"}, "597": {"branch": 7, "fn": "Election.Vote", "offset": [1148, 1177], "op": "ISZERO", "path": "0"}, "598": {"fn": "Election.Vote", "offset": [1129, 1177], "op": "JUMPDEST", "path": "0"}, "599": {"fn": "Election.Vote", "offset": [1121, 1178], "op": "PUSH2", "path": "0", "value": "0x25F"}, "602": {"branch": 7, "fn": "Election.Vote", "offset": [1121, 1178], "op": "JUMPI", "path": "0"}, "603": {"fn": "Election.Vote", "offset": [1121, 1178], "op": "PUSH1", "path": "0", "value": "0x0"}, "605": {"fn": "Election.Vote", "offset": [1121, 1178], "op": "DUP1", "path": "0"}, "606": {"fn": "Election.Vote", "offset": [1121, 1178], "op": "REVERT", "path": "0"}, "607": {"fn": "Election.Vote", "offset": [1121, 1178], "op": "JUMPDEST", "path": "0"}, "608": {"fn": "Election.Vote", "offset": [1224, 1234], "op": "CALLER", "path": "0", "statement": 3}, "609": {"fn": "Election.Vote", "offset": [1217, 1223], "op": "PUSH1", "path": "0", "value": "0x0"}, "611": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "SWAP1", "path": "0"}, "612": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "DUP2", "path": "0"}, "613": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "MSTORE", "path": "0"}, "614": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "PUSH1", "path": "0", "value": "0x20"}, "616": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "DUP2", "path": "0"}, "617": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "DUP2", "path": "0"}, "618": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "MSTORE", "path": "0"}, "619": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "PUSH1", "path": "0", "value": "0x40"}, "621": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "DUP1", "path": "0"}, "622": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "DUP4", "path": "0"}, "623": {"fn": "Election.Vote", "offset": [1217, 1235], "op": "KECCAK256", "path": "0"}, "624": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "DUP1", "path": "0"}, "625": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "SLOAD", "path": "0"}, "626": {"op": "PUSH1", "value": "0xFF"}, "628": {"op": "NOT"}, "629": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "AND", "path": "0"}, "630": {"fn": "Election.Vote", "offset": [1236, 1240], "op": "PUSH1", "path": "0", "value": "0x1"}, "632": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "SWAP1", "path": "0"}, "633": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "DUP2", "path": "0"}, "634": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "OR", "path": "0"}, "635": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "SWAP1", "path": "0"}, "636": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "SWAP2", "path": "0"}, "637": {"fn": "Election.Vote", "offset": [1217, 1240], "op": "SSTORE", "path": "0"}, "638": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "DUP5", "path": "0", "statement": 4}, "639": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "DUP5", "path": "0"}, "640": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "MSTORE", "path": "0"}, "641": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "SWAP1", "path": "0"}, "642": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "SWAP2", "path": "0"}, "643": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "MSTORE", "path": "0"}, "644": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "DUP2", "path": "0"}, "645": {"fn": "Election.Vote", "offset": [1284, 1308], "op": "KECCAK256", "path": "0"}, "646": {"fn": "Election.Vote", "offset": [1284, 1319], "op": "PUSH1", "path": "0", "value": "0x3"}, "648": {"fn": "Election.Vote", "offset": [1284, 1319], "op": "ADD", "path": "0"}, "649": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "DUP1", "path": "0"}, "650": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "SLOAD", "path": "0"}, "651": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "SWAP2", "path": "0"}, "652": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "PUSH2", "path": "0", "value": "0x294"}, "655": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "DUP4", "path": "0"}, "656": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "PUSH2", "path": "0", "value": "0x3AA"}, "659": {"fn": "Election.Vote", "jump": "i", "offset": [1284, 1321], "op": "JUMP", "path": "0"}, "660": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "JUMPDEST", "path": "0"}, "661": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "SWAP2", "path": "0"}, "662": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "SWAP1", "path": "0"}, "663": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "POP", "path": "0"}, "664": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "SSTORE", "path": "0"}, "665": {"fn": "Election.Vote", "offset": [1284, 1321], "op": "POP", "path": "0"}, "666": {"fn": "Election.Vote", "offset": [956, 1326], "op": "POP", "path": "0"}, "667": {"fn": "Election.Vote", "jump": "o", "offset": [956, 1326], "op": "JUMP", "path": "0"}, "668": {"op": "JUMPDEST"}, "669": {"op": "PUSH1", "value": "0x0"}, "671": {"op": "PUSH1", "value": "0x20"}, "673": {"op": "DUP3"}, "674": {"op": "DUP5"}, "675": {"op": "SUB"}, "676": {"op": "SLT"}, "677": {"op": "ISZERO"}, "678": {"op": "PUSH2", "value": "0x2AE"}, "681": {"op": "JUMPI"}, "682": {"op": "PUSH1", "value": "0x0"}, "684": {"op": "DUP1"}, "685": {"op": "REVERT"}, "686": {"op": "JUMPDEST"}, "687": {"op": "POP"}, "688": {"op": "CALLDATALOAD"}, "689": {"op": "SWAP2"}, "690": {"op": "SWAP1"}, "691": {"op": "POP"}, "692": {"jump": "o", "op": "JUMP"}, "693": {"op": "JUMPDEST"}, "694": {"op": "PUSH1", "value": "0x0"}, "696": {"op": "DUP2"}, "697": {"op": "MLOAD"}, "698": {"op": "DUP1"}, "699": {"op": "DUP5"}, "700": {"op": "MSTORE"}, "701": {"op": "PUSH1", "value": "0x0"}, "703": {"op": "JUMPDEST"}, "704": {"op": "DUP2"}, "705": {"op": "DUP2"}, "706": {"op": "LT"}, "707": {"op": "ISZERO"}, "708": {"op": "PUSH2", "value": "0x2DB"}, "711": {"op": "JUMPI"}, "712": {"op": "PUSH1", "value": "0x20"}, "714": {"op": "DUP2"}, "715": {"op": "DUP6"}, "716": {"op": "ADD"}, "717": {"op": "DUP2"}, "718": {"op": "ADD"}, "719": {"op": "MLOAD"}, "720": {"op": "DUP7"}, "721": {"op": "DUP4"}, "722": {"op": "ADD"}, "723": {"op": "DUP3"}, "724": {"op": "ADD"}, "725": {"op": "MSTORE"}, "726": {"op": "ADD"}, "727": {"op": "PUSH2", "value": "0x2BF"}, "730": {"op": "JUMP"}, "731": {"op": "JUMPDEST"}, "732": {"op": "DUP2"}, "733": {"op": "DUP2"}, "734": {"op": "GT"}, "735": {"op": "ISZERO"}, "736": {"op": "PUSH2", "value": "0x2ED"}, "739": {"op": "JUMPI"}, "740": {"op": "PUSH1", "value": "0x0"}, "742": {"op": "PUSH1", "value": "0x20"}, "744": {"op": "DUP4"}, "745": {"op": "DUP8"}, "746": {"op": "ADD"}, "747": {"op": "ADD"}, "748": {"op": "MSTORE"}, "749": {"op": "JUMPDEST"}, "750": {"op": "POP"}, "751": {"op": "PUSH1", "value": "0x1F"}, "753": {"op": "ADD"}, "754": {"op": "PUSH1", "value": "0x1F"}, "756": {"op": "NOT"}, "757": {"op": "AND"}, "758": {"op": "SWAP3"}, "759": {"op": "SWAP1"}, "760": {"op": "SWAP3"}, "761": {"op": "ADD"}, "762": {"op": "PUSH1", "value": "0x20"}, "764": {"op": "ADD"}, "765": {"op": "SWAP3"}, "766": {"op": "SWAP2"}, "767": {"op": "POP"}, "768": {"op": "POP"}, "769": {"jump": "o", "op": "JUMP"}, "770": {"op": "JUMPDEST"}, "771": {"op": "DUP5"}, "772": {"op": "DUP2"}, "773": {"op": "MSTORE"}, "774": {"op": "PUSH1", "value": "0x80"}, "776": {"op": "PUSH1", "value": "0x20"}, "778": {"op": "DUP3"}, "779": {"op": "ADD"}, "780": {"op": "MSTORE"}, "781": {"op": "PUSH1", "value": "0x0"}, "783": {"op": "PUSH2", "value": "0x31B"}, "786": {"op": "PUSH1", "value": "0x80"}, "788": {"op": "DUP4"}, "789": {"op": "ADD"}, "790": {"op": "DUP7"}, "791": {"op": "PUSH2", "value": "0x2B5"}, "794": {"jump": "i", "op": "JUMP"}, "795": {"op": "JUMPDEST"}, "796": {"op": "DUP3"}, "797": {"op": "DUP2"}, "798": {"op": "SUB"}, "799": {"op": "PUSH1", "value": "0x40"}, "801": {"op": "DUP5"}, "802": {"op": "ADD"}, "803": {"op": "MSTORE"}, "804": {"op": "PUSH2", "value": "0x32D"}, "807": {"op": "DUP2"}, "808": {"op": "DUP7"}, "809": {"op": "PUSH2", "value": "0x2B5"}, "812": {"jump": "i", "op": "JUMP"}, "813": {"op": "JUMPDEST"}, "814": {"op": "SWAP2"}, "815": {"op": "POP"}, "816": {"op": "POP"}, "817": {"op": "DUP3"}, "818": {"op": "PUSH1", "value": "0x60"}, "820": {"op": "DUP4"}, "821": {"op": "ADD"}, "822": {"op": "MSTORE"}, "823": {"op": "SWAP6"}, "824": {"op": "SWAP5"}, "825": {"op": "POP"}, "826": {"op": "POP"}, "827": {"op": "POP"}, "828": {"op": "POP"}, "829": {"op": "POP"}, "830": {"jump": "o", "op": "JUMP"}, "831": {"op": "JUMPDEST"}, "832": {"op": "PUSH1", "value": "0x0"}, "834": {"op": "PUSH1", "value": "0x20"}, "836": {"op": "DUP3"}, "837": {"op": "DUP5"}, "838": {"op": "SUB"}, "839": {"op": "SLT"}, "840": {"op": "ISZERO"}, "841": {"op": "PUSH2", "value": "0x351"}, "844": {"op": "JUMPI"}, "845": {"op": "PUSH1", "value": "0x0"}, "847": {"op": "DUP1"}, "848": {"op": "REVERT"}, "849": {"op": "JUMPDEST"}, "850": {"op": "DUP2"}, "851": {"op": "CALLDATALOAD"}, "852": {"op": "PUSH1", "value": "0x1"}, "854": {"op": "PUSH1", "value": "0x1"}, "856": {"op": "PUSH1", "value": "0xA0"}, "858": {"op": "SHL"}, "859": {"op": "SUB"}, "860": {"op": "DUP2"}, "861": {"op": "AND"}, "862": {"op": "DUP2"}, "863": {"op": "EQ"}, "864": {"op": "PUSH2", "value": "0x368"}, "867": {"op": "JUMPI"}, "868": {"op": "PUSH1", "value": "0x0"}, "870": {"op": "DUP1"}, "871": {"op": "REVERT"}, "872": {"op": "JUMPDEST"}, "873": {"op": "SWAP4"}, "874": {"op": "SWAP3"}, "875": {"op": "POP"}, "876": {"op": "POP"}, "877": {"op": "POP"}, "878": {"jump": "o", "op": "JUMP"}, "879": {"op": "JUMPDEST"}, "880": {"op": "PUSH1", "value": "0x1"}, "882": {"op": "DUP2"}, "883": {"op": "DUP2"}, "884": {"op": "SHR"}, "885": {"op": "SWAP1"}, "886": {"op": "DUP3"}, "887": {"op": "AND"}, "888": {"op": "DUP1"}, "889": {"op": "PUSH2", "value": "0x383"}, "892": {"op": "JUMPI"}, "893": {"op": "PUSH1", "value": "0x7F"}, "895": {"op": "DUP3"}, "896": {"op": "AND"}, "897": {"op": "SWAP2"}, "898": {"op": "POP"}, "899": {"op": "JUMPDEST"}, "900": {"op": "PUSH1", "value": "0x20"}, "902": {"op": "DUP3"}, "903": {"op": "LT"}, "904": {"op": "DUP2"}, "905": {"op": "EQ"}, "906": {"op": "ISZERO"}, "907": {"op": "PUSH2", "value": "0x3A4"}, "910": {"op": "JUMPI"}, "911": {"op": "PUSH4", "value": "0x4E487B71"}, "916": {"op": "PUSH1", "value": "0xE0"}, "918": {"op": "SHL"}, "919": {"op": "PUSH1", "value": "0x0"}, "921": {"op": "MSTORE"}, "922": {"op": "PUSH1", "value": "0x22"}, "924": {"op": "PUSH1", "value": "0x4"}, "926": {"op": "MSTORE"}, "927": {"op": "PUSH1", "value": "0x24"}, "929": {"op": "PUSH1", "value": "0x0"}, "931": {"op": "REVERT"}, "932": {"op": "JUMPDEST"}, "933": {"op": "POP"}, "934": {"op": "SWAP2"}, "935": {"op": "SWAP1"}, "936": {"op": "POP"}, "937": {"jump": "o", "op": "JUMP"}, "938": {"op": "JUMPDEST"}, "939": {"op": "PUSH1", "value": "0x0"}, "941": {"op": "PUSH1", "value": "0x0"}, "943": {"op": "NOT"}, "944": {"op": "DUP3"}, "945": {"op": "EQ"}, "946": {"op": "ISZERO"}, "947": {"op": "PUSH2", "value": "0x3CC"}, "950": {"op": "JUMPI"}, "951": {"op": "PUSH4", "value": "0x4E487B71"}, "956": {"op": "PUSH1", "value": "0xE0"}, "958": {"op": "SHL"}, "959": {"op": "PUSH1", "value": "0x0"}, "961": {"op": "MSTORE"}, "962": {"op": "PUSH1", "value": "0x11"}, "964": {"op": "PUSH1", "value": "0x4"}, "966": {"op": "MSTORE"}, "967": {"op": "PUSH1", "value": "0x24"}, "969": {"op": "PUSH1", "value": "0x0"}, "971": {"op": "REVERT"}, "972": {"op": "JUMPDEST"}, "973": {"op": "POP"}, "974": {"op": "PUSH1", "value": "0x1"}, "976": {"op": "ADD"}, "977": {"op": "SWAP1"}, "978": {"jump": "o", "op": "JUMP"}}, "sha1": "7a047dce12e52337e03455b5e1df96a336929b0d", "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\ncontract Election{\n    //Candidate Structure\n  struct Candidate{\n      uint256 id;\n      string name;\n      string party;\n      uint256 vote_count;\n  }\n  //count voters\n  mapping(address=>bool) public voters;\n  //Store candidates\n  mapping(uint256=>Candidate) public Candidates;\n  //count candidates\n  uint256 public Candidate_count;\n  constructor(){\n      addCandidate(\"Devadas Aggarwal\",\"Bharatiya Janata Party\");\n      addCandidate(\"Pallav Pandit\",\"Indian National Congress\");\n      addCandidate(\"Harish Khurana\",\"Nationalist Congress Party\");\n      addCandidate(\"Sarita Dhaliwal\",\"Rashtriya Janata Dal\");\n      addCandidate(\"Jai Goyal\",\"Bahujan Samaj Party\");\n      addCandidate(\"NOTA\",\"None Of The Above\");\n  }\n  function addCandidate(string memory _name,string memory _party) private {\n      Candidate_count++;\n      Candidates[Candidate_count]=Candidate(Candidate_count,_name,_party,0);\n  }\n  function Vote(uint256 _candidateId) public{\n      //require that voter hasn't voted before\n      require(!voters[msg.sender]);\n      //require valid candidate\n      require(_candidateId >0 && _candidateId<=Candidate_count);\n      //record vote from voter\n      voters[msg.sender]=true;\n      //update candidate vote count\n      Candidates[_candidateId].vote_count++;\n  }\n  function viewvoters() public view returns (uint256){\n\n     return Candidate_count;\n\n  }\n\n}", "sourceMap": "56:1363:0:-:0;;;392:379;;;;;;;;;;413:57;;;;;;;;;;;;;;-1:-1:-1;;;413:57:0;;;;;;;;;;;;;;;;;;;;:12;;;:57;;:::i;:::-;478:56;;;;;;;;;;;;;;-1:-1:-1;;;478:56:0;;;;;;;;;;;;;;;;;;;;:12;;;:56;;:::i;:::-;542:59;;;;;;;;;;;;;;-1:-1:-1;;;542:59:0;;;;;;;;;;;;;;;;;;;;:12;;;:59;;:::i;:::-;609:54;;;;;;;;;;;;;;-1:-1:-1;;;609:54:0;;;;;;;;;;;;;;;;;;;;:12;;;:54;;:::i;:::-;671:47;;;;;;;;;;;;;;-1:-1:-1;;;671:47:0;;;;;;;;;;;;;;;;;;;;:12;;;:47;;:::i;:::-;726:40;;;;;;;;;;;;;;-1:-1:-1;;;726:40:0;;;;;;;;;;;;;;;;-1:-1:-1;;;726:40:0;;;:12;;;:40;;:::i;:::-;56:1363;;774:179;854:15;:17;;;:15;:17;;;:::i;:::-;;;;-1:-1:-1;;907:41:0;;;;;;;;917:15;;907:41;;;;;;;;;;;;;;;;-1:-1:-1;907:41:0;;;;;;879:27;;;:10;:27;;;;;;;:69;;;;;;;;907:41;;879:27;;:69;;;;;;;;;;;:::i;:::-;-1:-1:-1;879:69:0;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;774:179;;:::o;56:1363::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;56:1363:0;;;-1:-1:-1;56:1363:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:232:1;53:3;-1:-1:-1;;74:17:1;;71:140;;;133:10;128:3;124:20;121:1;114:31;168:4;165:1;158:15;196:4;193:1;186:15;71:140;-1:-1:-1;238:1:1;227:13;;14:232::o;251:380::-;330:1;326:12;;;;373;;;394:61;;448:4;440:6;436:17;426:27;;394:61;501:2;493:6;490:14;470:18;467:38;464:161;;;547:10;542:3;538:20;535:1;528:31;582:4;579:1;572:15;610:4;607:1;600:15;464:161;;251:380;;;:::o;:::-;56:1363:0;;;;;;", "sourcePath": "contracts/Election.sol", "type": "contract", "deployment": {"address": "0xf3719cb483A3c8010c82fdcb7ae4A95EDee9f00B", "chainid": "4", "blockHeight": 10123367}}